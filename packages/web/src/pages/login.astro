---
// src/pages/login.astro
import Layout from "@/layouts/Layout.astro";
import { auth } from "../lib/lucia";
import * as z from "zod";
import { DrizzleError } from "drizzle-orm";
import LoginForm from "@/components/LoginForm";
import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert";
import { AlertCircle } from "lucide-react";

let showErrorMessage = false;

// check for form submissions
if (Astro.request.method === "POST") {
  const { username, password } = Object.fromEntries(
    await Astro.request.formData(),
  ) as Record<string, string>;

  // basic check
  const loginSchema = z.object({
    username: z.string().min(4),
    password: z.string().min(4),
  });

  const result = loginSchema.safeParse({
    username,
    password,
  });

  if (result.success) {
    try {
      // find user by key
      // and validate password
      const key = await auth.useKey(
        "username",
        result.data.username.toLocaleLowerCase(),
        result.data.password,
      );
      const session = await auth.createSession({
        userId: key.userId,
        attributes: {},
      });
      Astro.locals.auth.setSession(session); // set session cookie
      return Astro.redirect("/", 302); // redirect to profile page
    } catch (e) {
      if (
        e instanceof DrizzleError &&
        (e.message === "AUTH_INVALID_KEY_ID" ||
          e.message === "AUTH_INVALID_PASSWORD")
      ) {
        // user does not exist
        // or invalid password
        showErrorMessage = true;
        console.error("Incorrect username or password");
      } else {
        showErrorMessage = true;
        console.error("An unknown error occurred during login");
      }
    }
  } else {
    showErrorMessage = true;
    console.error(result.error);
  }
}

const session = await Astro.locals.auth.validate();
if (session) return Astro.redirect("/", 302); // redirect to profile page
---

<Layout title="Login">
  <main class="flex min-h-screen w-screen grow flex-row">
    <div
      class="mx-8 my-24 hidden aspect-auto w-1/2 rounded-xl bg-black md:block"
    >
      <span></span>
    </div>
    <div
      class="flex w-full flex-col items-center justify-center bg-white md:w-1/2"
    >
      <h3 class="-mb-4 scroll-m-20 text-2xl font-extrabold tracking-tight">
        Welcome back!
      </h3>
      <p
        class="text-sm leading-7 text-muted-foreground [&:not(:first-child)]:mt-6"
      >
        We missed you, what's new?
      </p>

      <div class="w-2/3">
        <LoginForm client:load />
      </div>
      {
        showErrorMessage && (
          <div class="mt-2 w-2/3">
            <Alert variant="destructive">
              <AlertCircle className="h-4 w-4" />
              <AlertTitle>Error</AlertTitle>
              <AlertDescription>
                Invalid username or password. Please try again.
              </AlertDescription>
            </Alert>
          </div>
        )
      }
    </div>
  </main>
</Layout>
